# CMake doesn't allow linking of libraries outside of main CMake file
# Create a new project to link against later
project(spotify-qt-lib-third-party)
add_library(${PROJECT_NAME} STATIC)

option(USE_KEYCHAIN "Keychain support" ON)

# Some libraries assume headers are in the root
target_include_directories(${PROJECT_NAME} PRIVATE
	${CMAKE_CURRENT_SOURCE_DIR}/include/thirdparty)

if (USE_KEYCHAIN)
	if (WIN32)
		target_compile_definitions(${PROJECT_NAME} PUBLIC USE_KEYCHAIN)
		target_compile_definitions(${PROJECT_NAME} PRIVATE KEYCHAIN_WINDOWS)
		target_sources(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src/keychain_win.cpp)
		target_link_libraries(${PROJECT_NAME} PRIVATE crypt32)
	elseif (APPLE)
		find_library(COREFOUNDATION_LIBRARY CoreFoundation QUIET)
		find_library(SECURITY_LIBRARY Security QUIET)
		if (COREFOUNDATION_LIBRARY AND SECURITY_LIBRARY)
			target_compile_definitions(${PROJECT_NAME} PUBLIC USE_KEYCHAIN)
			target_compile_definitions(${PROJECT_NAME} PRIVATE KEYCHAIN_MACOS)
			target_sources(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src/keychain_mac.cpp)
			target_link_libraries(${PROJECT_NAME} PRIVATE ${COREFOUNDATION_LIBRARY} ${SECURITY_LIBRARY})
		endif ()
	elseif (UNIX)
		find_package(PkgConfig QUIET)
		if (PkgConfig_FOUND)
			pkg_check_modules(GLIB2 IMPORTED_TARGET glib-2.0 QUIET)
			pkg_check_modules(LIBSECRET IMPORTED_TARGET libsecret-1 QUIET)
			if (GLIB2_FOUND AND LIBSECRET_FOUND)
				target_compile_definitions(${PROJECT_NAME} PUBLIC USE_KEYCHAIN)
				target_compile_definitions(${PROJECT_NAME} PRIVATE KEYCHAIN_LINUX)
				target_sources(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src/keychain_linux.cpp)
				target_link_libraries(${PROJECT_NAME} PRIVATE PkgConfig::GLIB2 PkgConfig::LIBSECRET)
			endif ()
		endif ()
	endif ()
endif ()